{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/summernote-gallery/src/Module/DataManager.js","webpack:///./node_modules/summernote-gallery/src/Module/EventManager.js","webpack:///./node_modules/summernote-gallery/src/Module/GalleryModal.js","webpack:///./node_modules/summernote-gallery/src/Module/SummernoteGallery.js","webpack:///./node_modules/summernote-gallery/src/Module/index.js","webpack:///./src/Module/SubBrickLoader.js","webpack:///./src/Module/SummernoteBricks.js","webpack:///./src/Module/index.js","webpack:///./src/index.js"],"names":["loadSubBrick","subBrick","SummernoteGallery","SummernoteBricks","options","$","extend","name","buttonLabel","tooltip","SNOptions","plugins","subBricks","loadSubBricks","components","i","length","push","createButton","dropdown","summernote","ui","buttonGroup","button","className","contents","click","console","log","data","toggle","callback","$dropdown","render","each","index","SubBrick","SubBrickLoader","plugin","getPlugin","SummernoteBricksPlugin","summernoteBricks","_this","context","memo","createDropdown","events","we","e","initialize","_summernoteDecorator","fn","apply","arguments"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAyC;;AAE1B;;AAEf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,qDAAY;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpIA;AAAA;AAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,mBAAmB;AAC1C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;ACjCA;AAAA;AAAA;AAAyC;;AAE1B;;AAEf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET,yBAAyB,qDAAY;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;;AAExC;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,yHAAyH;AACzH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,mBAAmB,WAAW,aAAa;AACrG;AACA;AACA,kEAAkE,oBAAoB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC,kDAA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","file":"summernote-extensions.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import EventManager from './EventManager'\n\nexport default class DataManager {\n\n    constructor(options) {\n        this.options = $.extend({\n            // full http url for fetching data\n            url: null,\n\n            // array of objects with 'src' and 'title' keys\n            data: [],\n\n            // the key name that holds the data array\n            responseDataKey: 'data',\n\n            // the key name that holds the next page link\n            nextPageKey: 'links.next',\n        }, options);\n\n        this.init();\n    }\n\n    init(response) {\n        this.current_page = 0;\n        this.is_fetching_locked = false;\n        this.event = new EventManager();\n        this.fetch_url = this.options.url;\n        this.fetch_type = this.options.data.length ? 'data' : (this.fetch_url ? 'url' : null);\n    }\n\n    // stop data fetching if neither next page link nor data were found\n    setNextFetch(response) {\n        if (response.next_link && response.data.length) {\n            this.fetch_url = response.next_link;\n        } else {\n            this.lockFetching();\n        }\n    }\n\n    lockFetching() {\n        this.is_fetching_locked = true;\n    }\n\n    unlockFetching() {\n        this.is_fetching_locked = false;\n    }\n\n    // get a key from object with dot notation, example: data.key.subkey.\n    getObjectKeyByString(object, dotted_key, default_val) {\n        var value = dotted_key.split('.').reduce(function (item, i) {\n            return item ? item[i] : {};\n        }, object);\n\n        if (typeof default_val == 'undefined') {\n            default_val = value;\n        }\n\n        return value && !$.isEmptyObject(value) ? value : default_val;\n    }\n\n    parseResponse(response) {\n\n        return {\n            data: this.getObjectKeyByString(response, this.options.responseDataKey, []),\n            next_link: this.getObjectKeyByString(response, this.options.nextPageKey, null)\n        };\n    }\n\n    fetchData() {\n        var _this = this;\n\n        if (this.fetch_type == 'data') {\n\n            this.event.trigger('beforeFetch');\n            this.event.trigger('fetch', [_this.options.data]);\n            this.event.trigger('afterFetch');\n\n        } else if (this.fetch_type == 'url') {\n\n            // Prevent simultaneous requests.\n            // Because we need to get the next page link from each request,\n            // they must be synchronous.\n            if (this.is_fetching_locked) return;\n\n            var current_link = _this.fetch_url;\n\n            this.event.trigger('beforeFetch');\n\n            this.lockFetching();\n\n            $.ajax({\n                url: current_link,\n                beforeSend:function(xhr){\n                    // set the request link to get it afterwards in the response\n                    xhr.request_link = current_link;\n                },\n            })\n            .always(function () {\n                // this is the first callback to be called when the request finishs\n                _this.unlockFetching();\n            })\n            .done(function(response, status_text, xhr){\n                var parsed_response = _this.parseResponse(response);\n                _this.current_page++;\n\n                //\n                _this.setNextFetch(parsed_response);\n\n                _this.event.trigger('fetch', [\n                    parsed_response.data,\n                    _this.current_page,\n                    xhr.request_link,\n                    parsed_response.next_link\n                ]);\n            })\n            .fail(function() {\n                _this.event.trigger('error', [\"problem loading from \" + current_link]);\n            })\n            .always(function () {\n                _this.event.trigger('afterFetch');\n            });\n\n        } else {\n            _this.event.trigger('error', [\"options 'data' or 'url' must be set\"]);\n        }\n    }\n\n    fetchNext() {\n        if (this.fetch_type == 'url') {\n            this.fetchData();\n        }\n    }\n}\n","export default class EventManager {\n    constructor() {\n        // events store\n        this.events_queue = {};\n    }\n\n    // Register an event\n    on(event_name, closure) {\n        if (! Array.isArray(this.events_queue[event_name]) ) {\n            this.events_queue[event_name] = [];\n        }\n\n        this.events_queue[event_name].push(closure);\n\n        return this;\n    }\n\n    // Fire an event\n    trigger(event_name, params) {\n        var events = this.events_queue[event_name] || [];\n\n        for (var i = 0; i < events.length; i++) {\n            events[i].apply(this, params);\n        }\n\n        return this;\n    }\n\n    clearAll() {\n        this.events_queue = {};\n\n        return this;\n    }\n}","import EventManager from './EventManager'\n\nexport default class GalleryModal {\n\n    constructor(options) {\n        this.options = $.extend({\n            // load more data on modal scroll\n            loadOnScroll: false,\n\n            // modal max height\n            maxHeight: 500,\n\n            // modal title\n            title: 'summernote image gallery',\n\n            // close button text\n            close_text: 'Close',\n\n            // save button text\n            ok_text: 'Add',\n\n            // select all button text\n            selectAll_text: 'Select all',\n\n            // deselect all button text\n            deselectAll_text: 'Deselect all',\n\n            // message error to display when no image is selected\n            noImageSelected_msg: 'One image at least must be selected.'\n        }, options);\n\n        this.event = new EventManager();\n\n        this.template = this.getModalTemplate();\n        this.$modal = $(this.template).hide();\n\n        // class to add to image when selected\n        this.select_class = \"selected-img\";\n\n        this.addStyleToDom();\n        this.setOptions();\n\n        this.attachEvents();\n    }\n\n    setOptions() {\n        this.$modal.find('.modal-body').css('max-height', this.options.maxHeight);\n        this.$modal.find('.modal-title').html(this.options.title);\n        this.$modal.find('#close').html(this.options.close_text);\n        this.$modal.find('#save').html(this.options.ok_text);\n        this.$modal.find('#select-all').html(this.options.selectAll_text);\n        this.$modal.find('#deselect-all').html(this.options.deselectAll_text);\n    }\n\n    // append images to the modal with data object\n    addImages(data, page) {\n\n        var $page_images = this.createImages(data, page);\n        var $images_list = this.$modal.find('.images-list');\n\n        if ($images_list.find('.img-item').length) {\n            this.$modal.find('.images-list').append($page_images);\n        } else {\n            this.$modal.find('.images-list').html($page_images);\n        }\n    }\n\n    // generate image elements from data object\n    createImages(data, page) {\n        var _this = this;\n        let content = []\n\n        for (var i = 0; i < data.length; i++) {\n\n            var $image = $('<img class=\"img-thumbnail sng-image\" title=\"'+ data[i].title +'\" data-page=\"' + page + '\"/>');\n\n            $image.get(0).onload = function() {\n                $(this).siblings('.loading').hide()\n                $(this).click(function(event) {\n                    $(this).toggleClass(_this.select_class);\n                });\n            }\n\n            $image.attr('src', data[i].src);\n\n            var $item = $('<div class=\"col-md-2 mb-4 img-item\">'\n                            +'<i class=\"fa fa-check\"></i>'\n                            +'<span class=\"loading\">'\n                                +'<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            +'</span>'\n                        +'</div>');\n\n            $item.prepend($image);\n            content.push($item)\n        }\n\n        return content;\n    }\n\n    showError(message_text, permanent) {\n        var $message = this.$modal.find('.message');\n\n        $message.html('<span class=\"alert alert-danger\">' + message_text + '</span>');\n\n        if (!permanent) {\n            setTimeout(function () {\n                $message.html('');\n            }, 5000);\n        }\n    }\n\n    showLoading () {\n        this.$modal.find('.modal-footer .loading').show();\n    }\n\n    hideLoading () {\n        this.$modal.find('.modal-footer .loading').hide();\n    }\n\n    attachEvents() {\n        var _this = this;\n        var $modal = this.$modal;\n        var $modal_body = $modal.find('.modal-body');\n\n        $modal.find(\"button#save\").click(function(event) {\n            var $selected_img = $modal.find('.img-item img.' + _this.select_class);\n\n            if (! $selected_img.length) {\n                _this.showError(_this.options.noImageSelected_msg);\n                return;\n            }\n\n            $modal.modal('hide')\n\n            _this.event.trigger('beforeSave', [_this]);\n\n            $selected_img.each(function(index, el) {\n                _this.event.trigger('save', [_this, $(this)]);\n\n                $(this).removeClass(_this.select_class);\n            });\n\n            _this.event.trigger('afterSave', [this]);\n        });\n\n        $modal.on('hidden.bs.modal', function () {\n            _this.event.trigger('close')\n        })\n\n        $modal.find(\"button#select-all\").click(function(event) {\n            $modal.find('img').addClass(_this.select_class);\n        });\n\n        $modal.find(\"button#deselect-all\").click(function(event) {\n            $modal.find('img').removeClass(_this.select_class);\n        });\n\n        $modal_body.scroll(function() {\n            var $images_list = $modal.find('.images-list');\n            var is_near_bottom = $modal_body.scrollTop() + $modal_body.height() >= $images_list.height() - 100;\n\n            if (is_near_bottom) {\n                _this.event.trigger('scrollBottom', [_this]);\n            }\n        });\n    }\n\n    open() {\n        this.$modal.modal();\n    }\n\n    clearContent() {\n        // Reset the initial html\n        this.$modal.find('.images-list').html('');\n    }\n\n    // whether the images' container has enough content to show the vertical scroll\n    imagesContainerHasScroll() {\n        var $images_container = this.$modal.find('.modal-body');\n        var $images_list = $images_container.find('.images-list');\n\n        return parseInt($images_list.height()) > parseInt($images_container.height());\n    }\n\n    getModalTemplate() {\n\n        var bootsrap_version = parseInt($.fn.modal.Constructor.VERSION);\n        var header_content = [\n            '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n            '<h4 class=\"modal-title\">[gallery title]</h4>'\n        ];\n\n        var modal_html = ''+\n            '<div class=\"modal summernote-gallery fade\" tabindex=\"-1\" role=\"dialog\">'\n                + '<div class=\"modal-lg modal-dialog \">'\n                    + '<div class=\"modal-content\">'\n                        + '<div class=\"modal-header\">'\n                            + (bootsrap_version == 3 ? header_content.join('') : header_content.reverse().join(''))\n                        + '</div>'\n                        + '<div class=\"modal-body\">'\n                            + '<div class=\"row images-list\">'\n                            + '</div>'\n                        + '</div>'\n                        + '<div class=\"modal-footer\">'\n                            + '<span style=\"display: none;position: absolute;left: 10px;bottom: 10px;\" class=\"loading\" >'\n                                + '<i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\"></i>'\n                            + '</span >'\n                            + '<span style=\"display: inline-block; margin-right: 50px;\">'\n                                + '<button type=\"button\" id=\"deselect-all\" class=\"btn btn-default\">[Deselect-all]</button>'\n                                + '<button type=\"button\" id=\"select-all\" class=\"btn btn-default\">[select-all]</button>'\n                            + '</span >'\n                            + '<button type=\"button\" id=\"close\" class=\"btn btn-default\" data-dismiss=\"modal\">[Close]</button>'\n                            + '<button type=\"button\" id=\"save\" class=\"btn btn-primary\">[Add]</button>'\n                            + '<span class=\"message\" ></span >'\n                        + '</div>'\n                    + '</div>'\n                + '</div>'\n            + '</div>';\n\n        return modal_html;\n    }\n\n    addStyleToDom() {\n        this.$css = $('<style>'\n                        +'.img-item{'\n                            +'position : relative;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'position : absolute;'\n                            +'top : -10px;'\n                            +'right : 5px;'\n                            +'font-size: 30px;'\n                            +'color: #337AB7;'\n                        +'}'\n                        +'.img-item .sng-image{'\n                            /*+'min-height : 119.66px;'*/\n                        +'}'\n                        +'.img-item .loading{'\n                            +'position: absolute;'\n                            +'margin: auto;'\n                            +'top: -20px;'\n                            +'bottom: 0;'\n                            +'display: block;'\n                            +'left: 0;'\n                            +'right: 0;'\n                            +'width: 60px;'\n                            +'height: 42px;'\n                            +'text-align: center;'\n                        +'}'\n                        +'.modal.summernote-gallery .message{'\n                            +'display: block;'\n                            +'padding: 30px 0 20px 0;'\n                        +'}'\n                        +'.modal.summernote-gallery .message:empty{'\n                            +'display: block;'\n                            +'padding: 0px!important;'\n                        +'}'\n                        +'.modal.summernote-gallery .modal-body{'\n                            +'overflow: scroll;'\n                        +'}'\n                        +'.img-item .fa-check{'\n                            +'display : none;'\n                        +'}'\n                        +'.img-item .'+ this.select_class +' + .fa-check{'\n                            +'display : block;'\n                        +'}'\n                        +'.'+ this.select_class +'{'\n                            +'background-color: #5CB85C;'\n                        +'}'\n                    +'</style>');\n        this.$css.appendTo('body');\n    }\n}","import GalleryModal from './GalleryModal'\nimport DataManager from './DataManager'\n\nexport default class SummernoteGallery {\n    constructor(options) {\n        this.options = $.extend({\n            name: 'summernoteGallery',\n            buttonLabel: '<i class=\"fa fa-file-image-o\"></i> SN Gallery',\n            tooltip: 'summernote gallery'\n        }, options);\n\n        this.plugin_default_options = {}\n    }\n\n    // set the focus to the last focused element in the editor\n    recoverEditorFocus() {\n        var last_focused_el = $(this.editor).data('last_focused_element');\n        if(typeof last_focused_el !== \"undefined\") {\n            var editor = this.editable;\n            var range = document.createRange();\n            var sel = window.getSelection();\n            var cursor_position =  last_focused_el.length;\n\n            range.setStart(last_focused_el, cursor_position);\n            range.collapse(true);\n            sel.removeAllRanges();\n            sel.addRange(range);\n            editor.focus();\n        }\n    }\n\n    saveLastFocusedElement() {\n        var focused_element = window.getSelection().focusNode;\n        var parent = $(this.editable).get(0);\n        if ($.contains(parent, focused_element)) {\n            $(this.editor).data('last_focused_element', focused_element)\n        }\n    }\n\n    attachEditorEvents() {\n        var _this = this;\n\n        $(this.editable).on('keypress, mousemove', function() {\n            _this.saveLastFocusedElement();\n        })\n    }\n\n    initGallery(context) {\n        this.context = context;\n        this.editor = this.context.layoutInfo.note;\n        this.editable = this.context.layoutInfo.editable;\n        this.plugin_options = $.extend(\n            this.plugin_default_options,\n            this.context.options[this.options.name] || {}\n        )\n\n        this.modal = new GalleryModal(this.plugin_options.modal);\n        this.data_manager = new DataManager(this.plugin_options.source);\n\n        this.attachModalEvents();\n        this.attachEditorEvents();\n    }\n\n    attachModalEvents() {\n        var _this = this;\n\n        this.modal.event.on('beforeSave', function (gallery_modal) {\n            _this.recoverEditorFocus();\n        });\n\n        this.modal.event.on('save', function (gallery_modal, $image) {\n            // add selected images to summernote editor\n            _this.context.invoke(\n                'editor.pasteHTML',\n                '<img src=\"' + $image.attr('src') + '\" alt=\"' + ($image.attr('alt') || \"\") + '\" />'\n            );\n        });\n\n        this.modal.event.on('scrollBottom', function (gallery_modal) {\n            if (_this.modal.options.loadOnScroll) {\n                _this.data_manager.fetchNext();\n            }\n        });\n\n        this.modal.event.on('close', function (gallery_modal) {\n            _this.data_manager.init();\n            _this.modal.clearContent();\n        });\n    }\n\n    createButton() {\n        var _this = this;\n\n        var button = $.summernote.ui.button({\n            className: 'w-100',\n            contents: this.options.buttonLabel,\n            tooltip: this.options.tooltip,\n            click: function() {\n                _this.openGallery();\n            }\n        });\n\n        // create jQuery object from button instance.\n        return button.render();\n    }\n\n    attachDataEvents() {\n        var _this = this;\n\n        this.data_manager.event\n        .on('beforeFetch', function () {\n            _this.modal.showLoading();\n        })\n        .on('fetch', function (data, page, link) {\n            _this.modal.addImages(data, page);\n\n            setTimeout(function () {\n                if (_this.modal.options.loadOnScroll && !_this.modal.imagesContainerHasScroll()) {\n                    // The loadOnScroll won't work if the images' container doesn't have the scroll displayed,\n                    // so we need to keep loading the images until the scroll shows.\n                    _this.data_manager.fetchNext();\n                }\n            }, 2000)\n        })\n        .on('afterFetch', function () {\n            _this.modal.hideLoading();\n        })\n        .on('error', function (error) {\n            _this.modal.showError(error, true);\n        });\n    }\n\n    openGallery() {\n        this.attachDataEvents();\n        this.data_manager.fetchData();\n        this.modal.open();\n    }\n}","import SummernoteGallery from './SummernoteGallery'\n\nexport default class GalleryPlugin {\n    constructor(options) {\n        this.summernote_gallery = new SummernoteGallery(options);\n    }\n\n    getPlugin() {\n        let plugin = {};\n        let _this = this;\n        let options = this.summernote_gallery.options\n\n        plugin[options.name] = function(context) {\n\n            let sgOptions = context.options[options.name] || {}\n            let buttonLabel = sgOptions.buttonLabel || _this.summernote_gallery.options.buttonLabel\n\n            _this.summernote_gallery.options.buttonLabel = buttonLabel\n\n            // add gallery button\n            context.memo('button.' + options.name, _this.createButton());\n\n            this.events = {\n                'summernote.keyup': function(we, e)\n                {\n                    _this.summernote_gallery.saveLastFocusedElement();\n                }\n            };\n\n            this.initialize = function() {\n                _this.summernote_gallery.initGallery(context);\n            };\n        }\n\n        return plugin;\n    }\n\n    createButton() {\n        return this.summernote_gallery.createButton();\n    }\n}","import SummernoteGallery from \"summernote-gallery/src/Module\"\n\nexport default {\n  loadSubBrick(subBrick) {\n      switch (subBrick) {\n          case 'summernote-gallery': return SummernoteGallery\n      }\n  }\n}","import SubBrickLoader from \"./SubBrickLoader\";\nimport SummernoteGallery from \"summernote-gallery/src/Module\"\n// implements SummernotePluginInterface\nexport default class SummernoteBricks\n{\n    constructor(options) {\n        this.options = $.extend({\n            name: 'summernoteBricks',\n            buttonLabel: '<i class=\"fa fa-puzzle-piece\"></i> SN bricks',\n            tooltip: 'summernote bricks Dropdown',\n            SNOptions: {}\n        }, options);\n        this.plugins = []\n        this.subBricks = []\n\n\n        // Add the sub-bricks to the summernote plugins\n        this.loadSubBricks()\n    }\n\n    createDropdown() {\n\n        let components = [];\n\n        for (let i = 0; i < this.subBricks.length; i++) {\n            components.push(this.subBricks[i].createButton())\n        }\n\n        let dropdown = $.summernote.ui.buttonGroup([\n            /* create a button */\n            $.summernote.ui.button({\n                className: 'dropdown-toggle',\n                contents: this.options.buttonLabel,\n                tooltip: this.options.tooltip,\n                click: function () {\n                    console.log('summernote bricks button clicked')\n                },\n                data: {\n                    toggle: 'dropdown'\n                }\n            }),\n            /* create a dropdown */\n            $.summernote.ui.dropdown({\n                contents: components,\n                className: 'dropdown-style',\n                callback: function($dropdown) {\n\n                }\n            })\n        ])\n\n        return dropdown.render()\n    }\n\n    loadSubBricks() {\n\n        let options = this.options.SNOptions[this.options.name] || {};\n        let subBricks = options.subBricks || []\n\n        $.each(subBricks, (index, subBrick) => {\n\n            let SubBrick = SubBrickLoader.loadSubBrick(subBrick)\n\n            this.subBricks.push(new SubBrick())\n        })\n\n        for (let i = 0; i < this.subBricks.length; i++) {\n            let subBrick = this.subBricks[i]\n            let plugin = subBrick.getPlugin()\n            // console.log('plugin', plugin)\n            $.extend($.summernote.plugins, plugin);\n        }\n    }\n}\n","\nimport SummernoteBricks from \"./SummernoteBricks\";\nimport SummernoteGallery from \"summernote-gallery/src/Module\"\n\n\nexport default class SummernoteBricksPlugin {\n    constructor(options) {\n        this.summernoteBricks = new SummernoteBricks(options)\n    }\n\n    getPlugin() {\n        var plugin = {};\n        var _this = this;\n        let options = this.summernoteBricks.options\n        let summernoteBricks = this.summernoteBricks\n\n        plugin[options.name] = function(context) {\n\n            let buttonLabel = context.options[options.name]?.buttonLabel || _this.summernoteBricks.options.buttonLabel\n\n            _this.summernoteBricks.options.buttonLabel = buttonLabel\n\n            context.memo('button.' + options.name, summernoteBricks.createDropdown());\n\n            this.events = {\n                'summernote.keyup': function(we, e) {\n\n                },\n                'summernote.init': function(we, e) {\n\n                }\n            };\n\n            this.initialize = function() {\n\n            };\n        }\n\n        return plugin;\n    }\n}","import SummernoteBricksPlugin from './Module'\n\n\nconst _summernoteDecorator = $.fn.summernote\n\n$.fn.summernote = function (options) {\n\n    var plugin = new SummernoteBricksPlugin({\n        SNOptions: options\n    });\n\n    // add the plugin to summernote\n    $.extend($.summernote.plugins, plugin.getPlugin());\n\n    return _summernoteDecorator.apply($(this), arguments)\n}\n"],"sourceRoot":""}